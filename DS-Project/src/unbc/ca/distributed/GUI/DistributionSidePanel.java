/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package unbc.ca.distributed.GUI;

import java.awt.BorderLayout;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import unbc.ca.distributed.distributions.Generator;
import unbc.ca.distributed.distributions.GraphPanel;
import unbc.ca.distributed.library.SimulationRun;
import unbc.ca.distributed.management.ObjectFactory;

/**
 *
 * @author IDontKnow
 */
public class DistributionSidePanel extends javax.swing.JPanel {

    /**
     * Creates new form DistributionSidePanel
     */
    DistributionPanel p;
    MainFrame frame;

    DistributionSidePanel(DistributionPanel p, MainFrame frame) {
        this.p = p;
        this.frame = frame;
        initComponents();

        if (!ObjectFactory.isMultiple()) {
            multipleRuns.setEnabled(false);
        } else {
            populateCombo(multipleRuns);
            populateCombo2(nodes);
        }
        populateCombo2(nodes);
    }

    private void populateCombo(JComboBox combo) {
        DefaultComboBoxModel boxModel = new DefaultComboBoxModel();
        if (ObjectFactory.getSimulationRuns() != null) {
            for (Map.Entry<Integer, SimulationRun> entry : ObjectFactory.getSimulationRuns().entrySet()) {
                SimulationRun simulationRun = entry.getValue();

                boxModel.addElement(simulationRun.getName());
            }
            combo.setModel(boxModel);
        }
    }
    
    private void populateCombo2(JComboBox combo) {
        DefaultComboBoxModel boxModel = new DefaultComboBoxModel();
        
        for (int i = 1; i <= ObjectFactory.getNodeCount(); i++) {
            boxModel.addElement(String.valueOf(i));
        }
            combo.setModel(boxModel);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        distributions = new javax.swing.JComboBox();
        go = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        multipleRuns = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        nodes = new javax.swing.JComboBox();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Type of Distribution");

        distributions.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Critical Section", "Inter Request", "Hop Processing" }));

        go.setText("Go");
        go.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goActionPerformed(evt);
            }
        });

        jLabel2.setText("Simulation Run");

        multipleRuns.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No Run" }));

        jLabel3.setText("Node ID");

        nodes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No Node" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(190, 190, 190))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(go))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(distributions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(multipleRuns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nodes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nodes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(distributions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(multipleRuns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(go)
                .addContainerGap(286, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void goActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goActionPerformed
        // TODO add your handling code here:
        String type = distributions.getSelectedItem().toString();
        Generator u = null;
        if (ObjectFactory.isMultiple()) {
            int runId = Integer.parseInt(multipleRuns.getSelectedItem().toString().split(" ")[1]);
            u = ObjectFactory.getSimulationRuns().get(runId).getWorkloadObject().getWorkLoaddistributionCollection().get(Integer.parseInt(nodes.getSelectedItem().toString())).get(type);
        } else {
            u = ObjectFactory.getDistributionCollection().get(Integer.parseInt(nodes.getSelectedItem().toString())).get(type);            
        }
        
        GraphPanel g = new GraphPanel();
        
        p.setGraphPanel(g);
        p.graph.removeAll();
        
        System.out.println("Total entries "+u.getGeneratedValues().size());
        System.out.println("Ex entries "+u.getExpectedValues().size());
        
        g.generateGraph("Distribution Correctness:- " + type+"("+u.getDescription()+")", 
                u.getGeneratedValues(), u.getExpectedValues(), 
                u.getExpectedMean(), u.getExpectedStandardDeviation(), u.isDiscrete());
        
        g.setBounds(0, 0, p.graph.getWidth()-20, p.graph.getHeight()-20);
        p.graph.add(g);
        p.graph.updateUI();
    }//GEN-LAST:event_goActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox distributions;
    private javax.swing.JButton go;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox multipleRuns;
    private javax.swing.JComboBox nodes;
    // End of variables declaration//GEN-END:variables
}
