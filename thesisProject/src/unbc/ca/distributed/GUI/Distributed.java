/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package unbc.ca.distributed.GUI;

import java.io.File;
import unbc.ca.distributed.simDistributed.Dist_Server;
import java.util.logging.Level;
import java.util.logging.Logger;
import unbc.ca.distributed.distributions.Generator;
import unbc.ca.distributed.library.Utilites;
import unbc.ca.distributed.management.Configuration;
import unbc.ca.distributed.management.ObjectFactory;

/**
 *
 * @author behnish
 */
public class Distributed extends javax.swing.JPanel {

    /**
     * Creates new form Distributed
     */
    private UserSelection userS;

    public Distributed() {
        initComponents();
        startSimulation.setEnabled(false);
        userS = new UserSelection(ObjectFactory.getMainFrame(), true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        simulate = new javax.swing.JButton();
        hostName = new javax.swing.JTextField();
        port = new javax.swing.JTextField();
        startSimulation = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        csDistMean = new javax.swing.JTextField();
        csDistVariance = new javax.swing.JTextField();
        interDistMean = new javax.swing.JTextField();
        interDistVariance = new javax.swing.JTextField();
        delayMean = new javax.swing.JTextField();
        delayVariance = new javax.swing.JTextField();
        distribution = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        simulationRunTime = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        algorithm = new javax.swing.JComboBox();
        useNode = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        distribution1 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        distribution2 = new javax.swing.JComboBox();
        runAsClient = new javax.swing.JButton();

        jLabel1.setText("Host name");

        jLabel2.setText("Host Port");

        simulate.setText("Start Server");
        simulate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simulateActionPerformed(evt);
            }
        });

        hostName.setText("localhost");

        port.setText("2013");

        startSimulation.setText("Start Simulation");
        startSimulation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startSimulationActionPerformed(evt);
            }
        });

        jLabel3.setText("CS Distribution");

        jLabel4.setText("CS Sitting time");

        jLabel5.setText("Inter-Request Time");

        jLabel6.setText("Processing At Hop");

        csDistMean.setText("10");

        csDistVariance.setText("5");

        interDistMean.setText("10");

        interDistVariance.setText("5");
        interDistVariance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interDistVarianceActionPerformed(evt);
            }
        });

        delayMean.setText("10");

        delayVariance.setText("5");

        distribution.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Random", "Poisson", "Uniform" }));

        jLabel7.setText("Simulation Length");

        simulationRunTime.setText("10000");

        jLabel8.setText("Algorithm");

        algorithm.setModel(new javax.swing.DefaultComboBoxModel(Utilites.names()));

        useNode.setText("Use Selectd Node");
        useNode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useNodeActionPerformed(evt);
            }
        });

        jLabel9.setText("IR Distribution");

        distribution1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Random", "Poisson", "Uniform" }));

        jLabel10.setText("Hop Distribution");

        distribution2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Random", "Poisson", "Uniform" }));

        runAsClient.setText("Run As Client");
        runAsClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runAsClientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(50, 50, 50)
                                .addComponent(distribution, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1))
                                    .addGap(38, 38, 38)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(hostName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(port, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(51, 51, 51)
                                            .addComponent(simulate)
                                            .addGap(35, 35, 35)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(runAsClient)
                                                .addComponent(useNode))))))
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addContainerGap(94, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(startSimulation)
                                    .addComponent(distribution1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(csDistMean, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(interDistMean, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(43, 43, 43)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(interDistVariance, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                                            .addComponent(delayVariance)
                                            .addComponent(csDistVariance)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(delayMean, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(distribution2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(simulationRunTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(algorithm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(hostName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(simulate)
                            .addComponent(useNode))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(distribution, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(runAsClient))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(csDistMean, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csDistVariance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(distribution1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(interDistMean, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(interDistVariance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(distribution2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(delayMean, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delayVariance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(simulationRunTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(algorithm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(startSimulation)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void simulateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simulateActionPerformed
        // TODO add your handling code here:    
        Configuration.host = hostName.getText();
        Configuration.port = port.getText();

        Dist_Server s = new Dist_Server();
        s.setName("Server Thread");
        s.start();
        try {
            s.join();
        } catch (InterruptedException ex) {
            Logger.getLogger(Distributed.class.getName()).log(Level.SEVERE, null, ex);
        }
        startSimulation.setEnabled(true);
    }//GEN-LAST:event_simulateActionPerformed

    private void startSimulationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startSimulationActionPerformed
        // TODO add your handling code here:
        Generator csDis = Utilites.returnDistribution(distribution.getSelectedItem().toString(), Integer.parseInt(csDistMean.getText()), Integer.parseInt(csDistVariance.getText()));
        Generator intReqDis = Utilites.returnDistribution(distribution1.getSelectedItem().toString(), Integer.parseInt(interDistMean.getText()), Integer.parseInt(interDistVariance.getText()));
        Generator delayProcess = Utilites.returnDistribution(distribution2.getSelectedItem().toString(), Integer.parseInt(delayMean.getText()), Integer.parseInt(delayVariance.getText()));

        Configuration.simulationLength = Double.parseDouble(simulationRunTime.getText());

        ObjectFactory.getMainFrame().startSimulation_dist(algorithm.getSelectedItem().toString(), csDis, intReqDis, delayProcess);
        File file = new File("trace_network");
        if(file.exists())
        {
            file.delete();
        }
        ObjectFactory.getMainFrame().saveGraphIntoFile("trace_network");

    }//GEN-LAST:event_startSimulationActionPerformed

    private void interDistVarianceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interDistVarianceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_interDistVarianceActionPerformed

    private void useNodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useNodeActionPerformed
        // TODO add your handling code here:
        userS.setVisible(true);
    }//GEN-LAST:event_useNodeActionPerformed

    private void runAsClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runAsClientActionPerformed
        // TODO add your handling code here:        
        Configuration.host = hostName.getText();
        Configuration.port = port.getText();

        startSimulation.setEnabled(true);
//        Generator csDis = Utilites.returnDistribution(distribution.getSelectedItem().toString(), Integer.parseInt(csDistMean.getText()), Integer.parseInt(csDistVariance.getText()));
//        Generator intReqDis = Utilites.returnDistribution(distribution1.getSelectedItem().toString(), Integer.parseInt(interDistMean.getText()), Integer.parseInt(interDistVariance.getText()));
//        Generator delayProcess = Utilites.returnDistribution(distribution2.getSelectedItem().toString(), Integer.parseInt(delayMean.getText()), Integer.parseInt(delayVariance.getText()));
//        
//        Configuration.simulationLength = Double.parseDouble(simulationRunTime.getText());
//        
//        ObjectFactory.getMainFrame().startSimulation_dist(algorithm.getSelectedItem().toString(), csDis, intReqDis, delayProcess);
//        ObjectFactory.getMainFrame().saveGraphIntoFile("trace_network");
    }//GEN-LAST:event_runAsClientActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox algorithm;
    private javax.swing.JTextField csDistMean;
    private javax.swing.JTextField csDistVariance;
    private javax.swing.JTextField delayMean;
    private javax.swing.JTextField delayVariance;
    private javax.swing.JComboBox distribution;
    private javax.swing.JComboBox distribution1;
    private javax.swing.JComboBox distribution2;
    private javax.swing.JTextField hostName;
    private javax.swing.JTextField interDistMean;
    private javax.swing.JTextField interDistVariance;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField port;
    private javax.swing.JButton runAsClient;
    private javax.swing.JButton simulate;
    private javax.swing.JTextField simulationRunTime;
    private javax.swing.JButton startSimulation;
    private javax.swing.JButton useNode;
    // End of variables declaration//GEN-END:variables
}
